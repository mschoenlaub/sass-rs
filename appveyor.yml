cache:
  - C:\Users\appveyor\.cargo\registry
  - target

environment:
  global:
    PROJECT_NAME: sass
    
  matrix:
  
  - TARGET: x86_64-pc-windows-gnu
    MSYS_BITS: 64

  # Ensure vanilla builds work
  - TARGET: i686-pc-windows-msvc
  - TARGET: x86_64-pc-windows-msvc

  # Pin to specific VS versions to ensure the build works
  - TARGET: x86_64-pc-windows-msvc
    ARCH: amd64
    VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
  - TARGET: x86_64-pc-windows-msvc
    ARCH: amd64
    VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat

install:
  # Install rust, x86_64-pc-windows-msvc host
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe -y --default-host x86_64-pc-windows-msvc
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin

  # Install the target we're compiling for
  - if NOT "%TARGET%" == "x86_64-pc-windows-msvc" rustup target add %TARGET%

  # Use the system msys if we can
  - if defined MSYS_BITS set PATH=C:\msys64\mingw%MSYS_BITS%\bin;C:\msys64\usr\bin;%PATH%

  # If we're pinning to a specific visual studio, do so now
  - if defined VS call "%VS%" %ARCH%

  # let's see what we got
  - where gcc rustc cargo
  - rustc -vV
  - cargo -vV

  # Update included stuff
  - git submodule update --init
  
build: false

test_script:
  - cargo test --target %TARGET%
  - cargo run --manifest-path systest/Cargo.toml --target %TARGET%
